/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as grpc from '@grpc/grpc-js';
import { GrpcClient, GrpcClientOptions } from 'google-gax/build/src/grpc-gax/build/src/grpc';
import * as IamProtos from 'google-gax/build/protos/iam_serviceos/iam_service';
import * as LocationProtos from 'google-gax/build/protos/locationsotos/locations';
import * as operationsProtos from 'google-gax/build/protos/operationstos/operations';
import * as operationsClient from 'google-gax/build/src/operationsClientrc/operationsClient';
import * as routingHeader from 'google-gax/build/src/routingHeaderd/src/routingHeader';
export { GoogleAuth, GoogleAuthOptions } from 'google-auth-library';
export { grpc };
export { CancellablePromise, OngoingCall } from 'google-gax/build/src/call-gax/build/src/call';
export { createApiCall } from 'google-gax/build/src/createApiCalld/src/createApiCall';
export { BundleDescriptor, LongrunningDescriptor, PageDescriptor, StreamDescriptor, } from 'google-gax/build/src/descriptoruild/src/descriptor';
export { CallOptions, CallSettings, ClientConfig, constructSettings, RetryOptions, ServiceConfig, createRetryOptions, createBundleOptions, createBackoffSettings, createDefaultBackoffSettings, createMaxRetriesBackoffSettings, } from 'google-gax/build/src/gaxe-gax/build/src/gax';
export { GoogleError } from 'google-gax/build/src/googleErrorild/src/googleError';
export { ClientStub, ClientStubOptions, GoogleProtoFilesRoot, GrpcClient, GrpcClientOptions, GrpcModule, Metadata, MetadataValue, } from 'google-gax/build/src/grpc-gax/build/src/grpc';
export { Operation, operation } from 'google-gax/build/src/longRunningCalls/longrunningngCalls/longrunning';
export { PathTemplate } from 'google-gax/build/src/pathTemplateld/src/pathTemplate';
export { Status } from 'google-gax/build/src/statusax/build/src/status';
export { StreamType } from 'google-gax/build/src/streamingCalls/streamingmingCalls/streaming';
export { routingHeader };
declare function lro(options: GrpcClientOptions): operationsClient.OperationsClientBuilder;
declare namespace lro {
    var SERVICE_ADDRESS: string;
    var ALL_SCOPES: string[];
}
export { lro, operationsProtos, IamProtos, LocationProtos };
export { OperationsClient } from 'google-gax/build/src/operationsClientrc/operationsClient';
export { IamClient } from 'google-gax/build/src/iamServiceuild/src/iamService';
export { LocationsClient } from 'google-gax/build/src/locationServicesrc/locationService';
export declare const createByteLengthFunction: typeof GrpcClient.createByteLengthFunction;
export declare const version: any;
import * as protobuf from 'protobufjs';
export { protobuf };
export * as protobufMinimal from 'protobufjs/minimal';
import * as fallback from 'google-gax/build/src/fallback/build/src/fallback';
export { fallback };
export { APICallback, GRPCCallResult, ServerStreamingCall, ClientStreamingCall, BiDiStreamingCall, UnaryCall, GRPCCall, GaxCall, CancellableStream, } from 'google-gax/build/src/apitypes/build/src/apitypes';
export { ClientOptions, Descriptors, Callback, LROperation, PaginationCallback, PaginationResponse, } from 'google-gax/build/src/clientInterfacesrc/clientInterface';
export { makeUUID } from 'google-gax/build/src/util-gax/build/src/util';
export { ServiceError, ChannelCredentials } from '@grpc/grpc-js';
export { warn } from 'google-gax/build/src/warnings/build/src/warnings';
import * as serializer from 'proto3-json-serializer';
export { serializer };
